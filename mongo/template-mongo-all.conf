###########################################
#                                         
#  Author: jean-luc.rakotovao@alterway.fr 
#  What it does :                         
#   BACKUP of local Client's dumps              
#   1/day       retention of 21 days 
#   1/week      retention of 3 months
#   1/month     retention of 1 year  
#                                         
###########################################

  # FILESET:  
  FileSet {
    Name = "fs_<machine>-mongo-all"
      Include {
        Options {
          signature        = SHA1
          basejob          = pmugcs1
          accurate         = mcs
          verify           = pin1
          onefs            = no
          checkfilechanges = yes
        }
      }
    Include {
      # Do never backup a Storage !!! 
      # the dump is created by RunScript {RunsWhen = before ... } 
      # the dump is created by RunScript {RunsWhen = after ... } 
      File = /var/backups/mongo
    }
    Exclude {
      File = "*/.snapshot/*"
      File = "*/.journal"
      File = "*/.fsck"
    }
  }

  # SCHEDULE: daily
  Schedule {
    Name = "sc_<machine>-mongo-daily"
    Run  = Level=Base    mon-sat at 22:30
  }

  # SCHEDULE: quarterly
  Schedule {
    Name = "sc_<machine>-mongo-quarterly"
    Run  = Level=Base    2nd-5th sun at 22:30
  }

  # SCHEDULE: yearly
  Schedule {
    Name = "sc_<machine>-mongo-yearly"
    Run  = Level=Base    1st sun at 22:30
  }

  # - POOL: daily 
  Pool {
    Name                    = pool_<machine>-mongo-daily
    Pool Type               = Backup
    
    Storage                 = st_<machine>_bdd
    
    UseVolumeOnce           = yes
    Maximum Volume Jobs     = 1 
    Volume Use Duration     = 24 hours
    
    AutoPrune               = yes
    Volume Retention        = 22 days # Retention in Catalog cf. Client.Job_Retention
    
    Label Format            = "daily.<machine>.mongo.${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}-${Hour:p/2/0/r}"
  }

  # - POOL: quarterly
  Pool {
    Name                    = pool_<machine>-mongo-quarterly
    Pool Type               = Backup

    Storage                 = st_<machine>_bdd

    UseVolumeOnce           = yes
    Maximum Volume Jobs     = 1
    Volume Use Duration     = 24 hours

    AutoPrune               = yes
    Volume Retention        = 22 days # Retention in Catalog cf. Client.Job_Retention

    Label Format            = "quarterly.<machine>.mongo.${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}-${Hour:p/2/0/r}"
  }

  # - POOL: yearly
  Pool {
    Name                    = pool_<machine>-mongo-yearly
    Pool Type               = Backup

    Storage                 = st_<machine>_bdd

    UseVolumeOnce           = yes
    Maximum Volume Jobs     = 1
    Volume Use Duration     = 24 hours

    AutoPrune               = yes
    Volume Retention        = 13 months # Retention in Catalog cf. Client.Job_Retention

    Label Format            = "yearly.<machine>.mongo.${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}-${Hour:p/2/0/r}"
  }

  # JOB: daily 
  Job {
    Name                     = job_<machine>-mongo-daily
    Type                     = Backup
    Priority                 = 10
    
    Client                   = <machine>
    
    FileSet                  = fs_<machine>-mongo-all 
    Schedule                 = sc_<machine>-mongo-daily
    
    Pool                     = pool_<machine>-mongo-quarterly
    
    Max Run Time             = 10 hours
    Maximum Concurrent Jobs  = 10
    
    Reschedule On Error      = yes
    Reschedule Interval      = 10 minutes
    
    #Create the dump directory/file and apply bacula.tape rights 
    RunScript {
        RunsWhen = Before
        FailJobOnError = Yes
        Command = "bash -c 'rsync 10.0.132.200::bacula-script/backup_ctl /usr/local/bin/; /usr/local/bin/backup_ctl -p /var/backups -t mongo'"
    }
    RunScript {
        RunsWhen = After
        FailJobOnError = no
        RunsOnFailure = no
        Command = "bash -c '/usr/bin/find /var/backups/mongo -type f -mtime +1 -exec rm \{\} \\;'"
    }
    Messages                 = Standard
  }

  # JOB: quarterly 
  Job {
    Name                     = job_<machine>-mongo-quarterly
    Type                     = Backup
    Priority                 = 10

    Client                   = <machine>

    FileSet                  = fs_<machine>-mongo-all
    Schedule                 = sc_<machine>-mongo-quarterly

    Pool                     = pool_<machine>-mongo-quarterly

    Max Run Time             = 10 hours
    Maximum Concurrent Jobs  = 10

    Reschedule On Error      = yes
    Reschedule Interval      = 10 minutes

    #Create the dump directory/file and apply bacula.tape rights 
    RunScript {
        RunsWhen = Before
        FailJobOnError = Yes
        Command = "bash -c 'rsync 10.0.132.200::bacula-script/backup_ctl /usr/local/bin/; /usr/local/bin/backup_ctl -p /var/backups -t mongo'"
    }
    RunScript {
        RunsWhen = After
        FailJobOnError = no
        RunsOnFailure = no
        Command = "bash -c '/usr/bin/find /var/backups/mongo -type f -mtime +1 -exec rm \{\} \\;'"
    }
    Messages                 = Standard
  }

  # JOB: yearly 
  Job {
    Name                     = job_<machine>-mongo-yearly
    Type                     = Backup
    Priority                 = 10

    Client                   = <machine>

    FileSet                  = fs_<machine>-mongo-all
    Schedule                 = sc_<machine>-mongo-yearly

    Pool                     = pool_<machine>-mongo-yearly

    Max Run Time             = 10 hours
    Maximum Concurrent Jobs  = 10

    Reschedule On Error      = yes
    Reschedule Interval      = 10 minutes

    #Create the dump directory/file and apply bacula.tape rights 
    RunScript {
        RunsWhen = Before
        FailJobOnError = Yes
        Command = "bash -c 'rsync 10.0.132.200::bacula-script/backup_ctl /usr/local/bin/; /usr/local/bin/backup_ctl -p /var/backups -t mongo'"
    }
    RunScript {
        RunsWhen = After
        FailJobOnError = no
        RunsOnFailure = no
        Command = "bash -c '/usr/bin/find /var/backups/mongo -type f -mtime +1 -exec rm \{\} \\;'"
    }
    Messages                 = Standard
  }

# - JOB: restore - from 1 day to 3 weeks 
Job {
  Name                     = restore_<machine>_mongo
  Type                     = Restore
  Priority                 = 10
  
  Client                   = <machine>
  
  FileSet                  = fs_<machine>-mongo-all
  Pool                     = pool_<machine>-mongo-daily
  
  Storage                  = st_<machine>_bdd
  Where                    = /tmp/
  
  Messages                 = Standard
}

